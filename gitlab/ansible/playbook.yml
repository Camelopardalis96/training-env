# Preperation of Kanban Host
#

---
- name: Configure Gitlab Server
  hosts: all
  become: True
  tasks:
     - name: "Set German keymap for remote login"
       shell: "localectl set-keymap --no-convert de"

     - name: "Format external Disk"
       filesystem:
         fstype: ext4
         dev: /dev/xvdb

     - name: "Mount Volume to /data"
       mount:
         path: /data
         src: /dev/xvdb
         state: mounted
         fstype: ext4

     - name: Update instance from repo
       yum:
         name: '*'
         state: latest
         update_cache: yes
         skip_broken: yes

     - name: Install epel-Packages
       yum:
         name: 
          - epel-release
         state: latest
         update_cache: no

     - name: "Update epel-release and dependencies"
       yum:
         name:               '*'
         state:              latest
         skip_broken:        yes

     - name: "Install useful tools"
       yum:
         name:
          - epel-release
          - vim
          - htop
          - nload
          - tmux
          - iftop
          - iotop
          - glances
          - fail2ban
          - nfs-utils
          - python-pip
          - docker
         state:              latest
         update_cache:       no

     - name: Copy deamon.json template to /etc/docker
       register: dockerconf
       template:
         src: docker.daemon.j2
         dest: '/etc/docker/daemon.json'
         owner: root
         group: root

     - name: Install dependent python modules
       pip:
         name: "{{item}}"
         state: present
       with_items:
         - docker-py==1.10.6
         - docker-compose==1.9.0

     - name: Restart docker
       systemd:
         state: restarted
         enabled: yes
         name: docker
       register: status_install

     - name: be sure firewalld is disabled
       systemd:
         name: firewalld
         enabled: no

     - name: be sure firewalld is stopped
       systemd:
         name: firewalld
         state: stopped
       ignore_errors: yes

     - name: Delete .bash_logout
       file:
         path: /etc/skel/.bash_logout
         state: absent

     - name: Check if colorls.sh exists
       stat: 
         path: /etc/profile.d/colorls.sh
       register: colorls_exists

     - debug:
         var: colorls_exists

     - name: Disable color in ls command
       command: mv /etc/profile.d/colorls.sh /etc/profile.d/colorls.sh_
       when: colorls_exists.stat.exists == True
       register: status_update

     - debug:
         var: status_update

     - name: Check if colorgrep.sh exists
       stat: 
         path: /etc/profile.d/colorgrep.sh
       register: colorgrep_exists

     - name: Disable color in grep command
       command: mv /etc/profile.d/colorgrep.sh /etc/profile.d/colorgrep.sh_
       when: colorgrep_exists.stat.exists == True
       register: status_update

     - debug:
         var: status_update

     - name: Gitlab - create a directory for /etc/gitlab
       file:
         path: /data/gitlab/config
         state: directory

     - name: Gitlab - create a directory for /var/log/gitlab 
       file:
         path: /data/gitlab/logs
         state: directory

     - name: Gitlab - create a directory for /var/opt/gitlab
       file:
         path: /data/gitlab/data
         state: directory

     - name: Gitlab - set the proper selinux policy on it
       sefcontext:
         target: '/data/gitlab'
         setype: svirt_sandbox_file_t
         state: present

     - name: Restart System to reboot to newest Kernel
       shell: "sleep 5 && reboot"
       async: 1
       poll: 0

     - name: wait for 60 seconds
       pause:
         seconds: 60

     - name: wait for the system to reboot
       wait_for_connection:
         connect_timeout: 20
         sleep: 5
         delay: 5
         timeout: 180

     - name: Gitlab - get the Image
       shell: |
         docker pull gitlab/gitlab-ce:latest
       ignore_errors:                no

     - name: Gitlab - run Gitlab
       shell: |
         docker run -d \
         --publish 443:443 --publish 80:80 --publish 2222:22 \
         --name gitlab \
         --restart always \
         --volume /data/gitlab/config:/etc/gitlab \
         --volume /data/gitlab/logs:/var/log/gitlab \
         --volume /data/gitlab/data:/var/opt/gitlab \
         gitlab/gitlab-ce:latest

